[gd_scene load_steps=11 format=2]

[ext_resource path="res://StartMenu.tscn" type="PackedScene" id=1]
[ext_resource path="res://ColorRect.gd" type="Script" id=2]
[ext_resource path="res://godot3/white.png" type="Texture" id=3]
[ext_resource path="res://godot3/CRTFrame.png" type="Texture" id=4]
[ext_resource path="res://Music_HUB_Loop.wav" type="AudioStream" id=5]

[sub_resource type="GDScript" id=1]

script/source = "extends Node2D

func _ready():
	Global.startscreen = self
	Global.startscreen.get_node(\"CanvasLayer/CRT\").visible = true
	$AudioStreamPlayer.connect(\"finished\",$AudioStreamPlayer,\"play\")"

[sub_resource type="Shader" id=2]

code = "shader_type canvas_item;

uniform float threshold = 0.0;

void fragment(){
	vec2 uv = UV - vec2(0.5);
	uv.x *= SCREEN_PIXEL_SIZE.y / SCREEN_PIXEL_SIZE.x;
	vec2 polar;
	polar.x = length(uv);
	polar.y = atan(uv.y , uv.x);
	polar.y += mod(10.0 * polar.x,1.0);
	uv.y = polar.x * sin(polar.y);
	uv.x = polar.x * cos(polar.y);
	uv += vec2(0.5);
	vec4 c = vec4(sin(uv.x * 100.0) * sin(uv.y * 100.0) / 2.0 + 0.5);
	c.a = 1.0;
	if (c.r < threshold){
		COLOR = vec4(vec3(0.0),1.0);
	}
	else{
		COLOR = vec4(0.0);
	}	
}"

[sub_resource type="ShaderMaterial" id=3]

shader = SubResource( 2 )
shader_param/threshold = 0.0

[sub_resource type="Shader" id=4]

code = "shader_type canvas_item;

uniform float screen_width = 1024;
uniform float screen_height = 600;

// Curvature
uniform float BarrelPower =1.1;
// Color bleeding
uniform float color_bleeding = 1.2;
uniform float bleeding_range_x = 3;
uniform float bleeding_range_y = 3;
// Scanline
uniform float lines_distance = 4.0;
uniform float scan_size = 2.0;
uniform float scanline_alpha = 0.9;
uniform float lines_velocity = 30.0;
vec2 distort(vec2 p) 
{

	float angle = p.y / p.x;
	float theta = atan(p.y,p.x);
	float radius = pow(length(p), BarrelPower);
	
	p.x = radius * cos(theta);
	p.y = radius * sin(theta);
	
	return 0.5 * (p + vec2(1.0,1.0));
}

void get_color_bleeding(inout vec4 current_color,inout vec4 color_left){

	current_color = current_color*vec4(color_bleeding,0.5,0.25,1);
	color_left = color_left*vec4(0.25,0.5,color_bleeding,1);
}

void get_color_scanline(vec2 uv,inout vec4 c,float TIME){
	float line_row = floor((uv.y * screen_height/scan_size) + mod(TIME*lines_velocity, lines_distance));

	float n = 1.0 - ceil((mod(line_row,lines_distance)/lines_distance));

	c = c - n*c*(1.0 - scanline_alpha);
	c.a = 1.0;

}

void fragment()
{
	
vec2 xy = SCREEN_UV * 2.0;
xy.x -= 1.0;
xy.y -= 1.0;

float d = length(xy);
if(d < 1.5){
	xy = distort(xy);
}
else{
	xy = SCREEN_UV;
}

float pixel_size_x = 1.0/screen_width*bleeding_range_x;
float pixel_size_y = 1.0/screen_height*bleeding_range_y;
vec4 color_left = texture(SCREEN_TEXTURE,SCREEN_UV - vec2(pixel_size_x, pixel_size_y));
vec4 current_color = texture(SCREEN_TEXTURE,SCREEN_UV);
get_color_bleeding(current_color,color_left);
vec4 c = current_color+color_left;
get_color_scanline(xy,c,TIME);
COLOR = c;

}
"

[sub_resource type="ShaderMaterial" id=5]

shader = SubResource( 4 )
shader_param/screen_width = 1024.0
shader_param/screen_height = 600.0
shader_param/BarrelPower = 1.1
shader_param/color_bleeding = 1.2
shader_param/bleeding_range_x = 3.0
shader_param/bleeding_range_y = 3.0
shader_param/lines_distance = 4.0
shader_param/scan_size = 2.0
shader_param/scanline_alpha = 0.9
shader_param/lines_velocity = 30.0

[node name="StartScreen" type="Node2D"]
script = SubResource( 1 )

[node name="Level" type="Node" parent="."]

[node name="StartMenu" parent="Level" instance=ExtResource( 1 )]

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="TransitionShader" type="ColorRect" parent="CanvasLayer"]
material = SubResource( 3 )
margin_right = 512.0
margin_bottom = 288.0
script = ExtResource( 2 )

[node name="Tween" type="Tween" parent="CanvasLayer/TransitionShader"]

[node name="CRT" type="TextureRect" parent="CanvasLayer"]
material = SubResource( 5 )
margin_right = 512.0
margin_bottom = 288.0
texture = ExtResource( 3 )
expand = true

[node name="CRTFrame" type="TextureRect" parent="CanvasLayer/CRT"]
margin_right = 541.0
margin_bottom = 390.0
rect_scale = Vector2( 0.946396, 0.738916 )
texture = ExtResource( 4 )
expand = true

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 5 )

